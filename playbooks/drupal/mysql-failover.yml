---
# This playbook switches the Slave server to a Master, then reconfigures Drupal
# to use the Slave (now Master) as it's database server.
#
# To revert back to the normal configuration, run the following playbooks again:
#   main.yml (in the repo root)
#   playbooks/drupal/main.yml (in this folder)

# Disable read-only on slave and promote it to master.
- hosts: database[1]
  become: yes

  vars_files:
    - ../database/vars.yml
    - ../../config.yml

  pre_tasks:
    - name: Indicate Ansible is deploying to the server.
      command: /usr/bin/rgb red
      changed_when: false
      when: deploy_target == 'pi'

    - set_fact:
        mysql_replication_role: master

  roles:
    - geerlingguy.mysql

  tasks:
    - name: Run STOP SLAVE.
      mysql_replication: mode=stopslave

    - name: Run RESET SLAVE ALL.
      mysql_replication: mode=resetslaveall

    - name: Indicate Ansible is finished deploying to the server.
      command: /usr/bin/rgb green
      changed_when: false
      when: deploy_target == 'pi'

# Point Drupal to the new master.
- hosts: webservers
  become: yes

  vars_files:
    - vars/main.yml
    - ../../config.yml

  pre_tasks:
    - name: Indicate Ansible is deploying to the server.
      command: /usr/bin/rgb red
      changed_when: false
      when: deploy_target == 'pi'

    - set_fact:
        mysql_slave_failover_active: true

  tasks:
    - name: Copy settings.php file into place.
      template:
        src: ../templates/settings.php.j2
        dest: "{{ drupal_docroot }}/sites/default/settings.php"
        owner: www-data
        group: www-data

    - name: Ensure settings.php has proper permissions.
      file:
        path: "{{ drupal_docroot }}/sites/default/settings.php"
        mode: 0644

    - name: Indicate Ansible is finished deploying to the server.
      command: /usr/bin/rgb green
      changed_when: false
      when: deploy_target == 'pi'
